#filter-add {
  margin-right: 10px;
  font-size: 1.1em;
}

#filter-configuration {
  display: none;
  position: absolute;
  background: white;
  top: 125px;
  left: 25px;
  border: 1px solid #666;
  padding: 10px;
  * {
    display: inline;
  }

  #filter-is, #filter-create {
    display: none;
  }
}

#notifications-filter {
  margin-top: 25px;
  overflow: auto;
  background: #eff5fc;
  padding: 15px;
  border: 1px solid #cee1f4;
  border-bottom: 0;

}

.notification-toggle {
  margin: 0 auto;
}

#filter-list {
  display: inline;
  line-height: 3em;

  span {
    background: #cee1f4;
    padding: 5px 9px;
    border-radius: 16px;
    margin-left: 10px;
    cursor: pointer;
    white-space: nowrap;
    &::after {
      content: '  |  x'
    }
  }
}

#filter-query {
  width: 330px;
}

#error-callout {
  margin-top: 15px;
}

#notifications-table img {
  max-width: 50px;
  max-height: 50px;
  overflow: hidden;
}

#notifications-table .icon-stack {
  margin-left: 14px;
  margin-right: 10px;
}

#notifications-table, #messages-view table {
  tr {
    &.state-error, &.state-failing {
      td {
        border-left-color: very-light($color-error, 15);
      }

      &:hover td {
        background-color: very-light($color-error, 6);
        border-color: very-light($color-error, 15);

        .integration-icon-fallback {
          .icon-stack-base, .icon-exchange {
            color: $color-error;
          }
        }
      }
    }

    &.state-parked {
      td {
        border-left-color: lighten(black, 75);
      }

      &:hover td {
        background-color: lighten(black, 95);
        border-color: lighten(black, 75);

        .integration-icon-fallback {
          .icon-stack-base, .icon-exchange {
            color: lighten(black, 65);
          }
        }
      }
    }

    &.state-warn, &.state-scheduled {
      td {
        border-left-color: very-light($color-notice, 15);
      }

      &:hover td {
        background-color: very-light($color-notice, 6);
        border-color: very-light($color-notice, 15);

        .integration-icon-fallback {
          .icon-stack-base, .icon-exchange {
            color: $color-notice;
          }
        }
      }
    }

    &.state-completed {
      td {
        border-left-color: very-light($color-success, 25);
      }

      &:hover td {
        background-color: very-light($color-success, 10);
        border-color: very-light($color-success, 25);

        .integration-icon-fallback {
          .icon-stack-base, .icon-exchange {
            color: $color-success;
          }
        }
      }
    }

    &.without-border td {
      border-bottom: none;
    }

    &.hidden {
      td {
        padding: 0;
        border: 1px solid $color-border;
      }

      &:hover {
        td {
          background-color: transparent;
        }
      }
    }
  }
}